rule merge_all:
    input: ['job_out.0.d/out/tmp_0.vcf.gz', 'job_out.1.d/out/tmp_1.vcf.gz', 'job_out.2.d/out/tmp_2.vcf.gz', 'job_out.3.d/out/tmp_3.vcf.gz', 'job_out.4.d/out/tmp_4.vcf.gz']
    output: **{'raw': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.vcf.gz', 'raw_md5': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.vcf.gz.md5', 'raw_tbi': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.vcf.gz.tbi', 'raw_tbi_md5': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.vcf.gz.tbi.md5', 'stats': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.vcf.stats', 'stats_md5': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.vcf.stats.md5', 'f1r2': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.f1r2_tar.tar.gz', 'f1r2_md5': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/out/bwa.mutect2.P001-T1-DNA1-WGS1.raw.f1r2_tar.tar.gz.md5'}
    threads: resource_merge_threads
    resources:
        time=resource_merge_time,
        memory=resource_merge_memory,
        partition=resource_merge_partition,
    log: **{'conda_info': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/log/bwa.mutect2.P001-T1-DNA1-WGS1.conda_info.txt', 'conda_info_md5': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/log/bwa.mutect2.P001-T1-DNA1-WGS1.conda_info.txt.md5', 'conda_list': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/log/bwa.mutect2.P001-T1-DNA1-WGS1.conda_list.txt', 'conda_list_md5': '/work/bwa.mutect2.P001-T1-DNA1-WGS1/log/bwa.mutect2.P001-T1-DNA1-WGS1.conda_list.txt.md5'}
    shell:
        r'''
        set -euo pipefail  # Unofficial Bash strict mode

        # Initialize output directory -----------------------------------------

        outdir=$(basename {output.raw})

        mkdir -p output

        # Concatenate VCF files -----------------------------------------------

        bcftools concat \
            --allow-overlaps \
            -d none \
            -o output/out.vcf.gz \
            -O z \
            {input}

        # Concatenate stats ---------------------------------------------------

        chunks=$(echo "{input}" | sed -e "s/\.vcf\.gz/.vcf.stats/g" | sed -e "s/ / -stats /g")
        stats="output/out.vcf.stats"
        gatk MergeMutectStats -stats $chunks -O $stats

        # Concatenate f1r2 tar files ------------------------------------------

        tar_dir="output/out.f1r2_tar"

        mkdir -p $tar_dir
        pushd $tar_dir

        chunks=$(echo "{input}" | sed -e "s/\.vcf\.gz/.f1r2_tar.tar.gz/g" | sed -re "s/(job|merge)_out\.([0-9]+)\.d/..\/..\/\1_out.\2.d/g")
        for chunk in $chunks
        do
            tar -zxvf $chunk
        done
        tar -zcvf ../out.f1r2_tar.tar.gz *

        popd
        rm -rf $tar_dir

        # tabix index & md5 checksums -----------------------------------------

        tabix -f output/out.vcf.gz

        pushd output
        for f in *; do md5sum $f >$f.md5; done
        popd

        # Move to output directory --------------------------------------------

        mkdir -p $(dirname {output.raw})
        mv output/out.vcf.gz {output.raw}
        mv output/out.vcf.gz.md5 {output.raw_md5}
        mv output/out.vcf.gz.tbi {output.raw_tbi}
        mv output/out.vcf.gz.tbi.md5 {output.raw_tbi_md5}
        mv output/out.vcf.stats {output.stats}
        mv output/out.vcf.stats.md5 {output.stats_md5}
        mv output/out.f1r2_tar.tar.gz {output.f1r2}
        mv output/out.f1r2_tar.tar.gz.md5 {output.f1r2_md5}

        # Write out information about conda installation.
        conda list >{log.conda_list}
        conda info >{log.conda_info}

        pushd $(dirname {log.conda_list})
        md5sum $(basename {log.conda_list}) >$(basename {log.conda_list}).md5
        md5sum $(basename {log.conda_info}) >$(basename {log.conda_info}).md5
        popd
        '''
