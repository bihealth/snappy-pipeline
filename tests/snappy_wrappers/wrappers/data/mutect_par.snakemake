rule merge_all:
    input: ['job_out.0.d/.done', 'job_out.1.d/.done', 'job_out.2.d/.done', 'job_out.3.d/.done', 'job_out.4.d/.done', 'job_out.5.d/.done', 'job_out.6.d/.done', 'job_out.7.d/.done', 'job_out.8.d/.done', 'job_out.9.d/.done', 'job_out.10.d/.done', 'job_out.11.d/.done', 'job_out.12.d/.done', 'job_out.13.d/.done', 'job_out.14.d/.done', 'job_out.15.d/.done', 'job_out.16.d/.done', 'job_out.17.d/.done', 'job_out.18.d/.done', 'job_out.19.d/.done', 'job_out.20.d/.done', 'job_out.21.d/.done', 'job_out.22.d/.done', 'job_out.23.d/.done', 'job_out.24.d/.done', 'job_out.25.d/.done', 'job_out.26.d/.done', 'job_out.27.d/.done', 'job_out.28.d/.done', 'job_out.29.d/.done', 'job_out.30.d/.done', 'job_out.31.d/.done', 'job_out.32.d/.done', 'job_out.33.d/.done', 'job_out.34.d/.done', 'job_out.35.d/.done', 'job_out.36.d/.done', 'job_out.37.d/.done', 'job_out.38.d/.done', 'job_out.39.d/.done', 'job_out.40.d/.done', 'job_out.41.d/.done', 'job_out.42.d/.done', 'job_out.43.d/.done', 'job_out.44.d/.done', 'job_out.45.d/.done', 'job_out.46.d/.done', 'job_out.47.d/.done', 'job_out.48.d/.done', 'job_out.49.d/.done', 'job_out.50.d/.done', 'job_out.51.d/.done', 'job_out.52.d/.done', 'job_out.53.d/.done', 'job_out.54.d/.done', 'job_out.55.d/.done', 'job_out.56.d/.done', 'job_out.57.d/.done', 'job_out.58.d/.done', 'job_out.59.d/.done', 'job_out.60.d/.done', 'job_out.61.d/.done', 'job_out.62.d/.done', 'job_out.63.d/.done', 'job_out.64.d/.done', 'job_out.65.d/.done', 'job_out.66.d/.done', 'job_out.67.d/.done', 'job_out.68.d/.done', 'job_out.69.d/.done', 'job_out.70.d/.done', 'job_out.71.d/.done']
    output: **{'txt': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.txt', 'txt_md5': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.txt.md5', 'vcf': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.vcf.gz', 'vcf_md5': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.vcf.gz.md5', 'tbi': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.vcf.gz.tbi', 'tbi_md5': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.vcf.gz.tbi.md5', 'full': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.full.vcf.gz', 'full_md5': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.full.vcf.gz.md5', 'full_tbi': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.full.vcf.gz.tbi', 'full_tbi_md5': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.full.vcf.gz.tbi.md5', 'wig': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.wig', 'wig_md5': '/work/{mapper}.mutect.{tumor_library}/out/{mapper}.mutect.{tumor_library}.wig.md5'}
    log: **{'conda_info': '/work/bwa.mutect.P001-T1-DNA1-WGS1/log/bwa.mutect.P001-T1-DNA1-WGS1.conda_info.txt', 'conda_info_md5': '/work/bwa.mutect.P001-T1-DNA1-WGS1/log/bwa.mutect.P001-T1-DNA1-WGS1.conda_info.txt.md5', 'conda_list': '/work/bwa.mutect.P001-T1-DNA1-WGS1/log/bwa.mutect.P001-T1-DNA1-WGS1.conda_list.txt', 'conda_list_md5': '/work/bwa.mutect.P001-T1-DNA1-WGS1/log/bwa.mutect.P001-T1-DNA1-WGS1.conda_list.txt.md5'}
    shell:
        r'''
        # Initialize output directory -----------------------------------------

        outdir=$(basename {output.vcf})

        mkdir -p output

        # Take first header -------------------------------------------------------

        set +o pipefail
        zcat job_out.0.d/out/tmp_0.full.out.txt.gz | head -n 2 > output/result.full.out.txt
        zcat job_out.0.d/out/tmp_0.full.wig.txt.gz | head -n 2 > output/result.full.wig.txt
        set -o pipefail

        # Append body contents ----------------------------------------------------

        for jobno in {{0..71}}; do
            set +o pipefail
            zcat job_out.$jobno.d/out/tmp_$jobno.full.out.txt.gz | tail -n +3 >> output/result.full.out.txt
            zcat job_out.$jobno.d/out/tmp_$jobno.full.wig.txt.gz | tail -n +3 >> output/result.full.wig.txt
            set -o pipefail
        done

        # Use bcftools concat for VCF files ---------------------------------------

        bcftools concat -a -d none -O z -o output/result.full.vcf.gz job_out.*.d/out/tmp_*.full.vcf.gz
        bcftools concat -a -d none -O z -o output/result.vcf.gz job_out.*.d/out/tmp_*[0-9].vcf.gz

        # bgzip output and create tabix index -------------------------------------

        bgzip -f output/result.full.out.txt
        bgzip -f output/result.full.wig.txt

        tabix -f output/result.full.vcf.gz
        tabix -f output/result.vcf.gz

        pushd output
        for f in *; do md5sum $f >$f.md5; done
        popd

        # Move to output directory ------------------------------------------------

        mkdir -p $(dirname {output.txt})
        mv output/result.full.out.txt.gz {output.txt}
        mv output/result.full.out.txt.gz.md5 {output.txt_md5}
        mv output/result.full.vcf.gz {output.full_vcf}
        mv output/result.full.vcf.gz.md5 {output.full_vcf_md5}
        mv output/result.full.vcf.gz.tbi {output.full_tbi}
        mv output/result.full.vcf.gz.tbi.md5 {output.full_tbi_md5}
        mv output/result.vcf.gz {output.vcf}
        mv output/result.vcf.gz.md5 {output.vcf_md5}
        mv output/result.vcf.gz.tbi {output.tbi}
        mv output/result.vcf.gz.tbi.md5 {output.tbi_md5}
        mv output/result.full.wig.txt.gz {output.wig}
        mv output/result.full.wig.txt.gz.md5 {output.wig_md5}

        # Write out information about conda installation.
        conda list >{log.conda_list}
        conda info >{log.conda_info}
        md5sum {log.conda_list} >{log.conda_list_md5}
        md5sum {log.conda_info} >{log.conda_info_md5}
        '''

cluster_config['merge_all'] = {'ntasks': 1, 'time': '04:00', 'mem': 2048}
