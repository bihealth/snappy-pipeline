# CASE mode
# gCNV needs many rules, thus they are in their own file.


def get_gcnv_create_model_input():
    return wf.substep_getattr("gcnv", "get_cnv_model_result_files")()


def get_gcnv_create_model_output():
    yield "model", sorted(get_gcnv_create_model_input())


def targeted_seq_cnv_calling_gcnv_call_cnvs_input(wildcards):
    # Poor mans currying.
    return wf.substep_getattr("gcnv", "get_cnv_model_result_files_case_mode")(
        wildcards, checkpoints
    )


rule targeted_seq_cnv_calling_gcnv_create_model:
    input:
        gcnv_model_wf(get_gcnv_create_model_input()),
    output:
        get_gcnv_create_model_output(),


rule targeted_seq_cnv_calling_gcnv_call_cnvs:
    input:
        unpack(targeted_seq_cnv_calling_gcnv_call_cnvs_input),
    output:
        **wf. get_output_files("gcnv","call_cnvs_case_mode"),
    log:
        wf.get_log_file("gcnv", "call_cnvs_case_mode"),
    wrapper:
        wf.wrapper_path("gcnv/call_cnvs_case_mode")


rule targeted_seq_cnv_calling_gcnv_post_germline_calls:
    input:
        unpack(wf.get_input_files("gcnv", "post_germline_calls_case_mode")),
    output:
        **wf. get_output_files("gcnv","post_germline_calls"),
    log:
        wf.get_log_file("gcnv", "post_germline_calls"),
    wrapper:
        wf.wrapper_path("gcnv/post_germline_calls")


rule targeted_seq_cnv_calling_gcnv_merge_cohort_vcfs:
    input:
        wf.get_input_files("gcnv", "merge_cohort_vcfs"),
    output:
        **wf. get_output_files("gcnv","merge_cohort_vcfs"),
    log:
        wf.get_log_file("gcnv", "merge_cohort_vcfs"),
    wrapper:
        wf.wrapper_path("gcnv/merge_cohort_vcfs")


rule targeted_seq_cnv_calling_gcnv_extract_ped:
    input:
        unpack(wf.get_input_files("gcnv", "extract_ped")),
    output:
        **( wf. get_output_files("gcnv","extract_ped")),
    log:
        wf.get_log_file("gcnv", "extract_ped"),
    params:
        ped_members=wf.substep_getattr("gcnv", "get_ped_members"),
    wrapper:
        wf.wrapper_path("gcnv/extract_ped")
